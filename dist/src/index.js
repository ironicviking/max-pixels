import{GraphicsEngine as e}from"./graphics/GraphicsEngine.js";import{ParticleSystem as t}from"./graphics/ParticleSystem.js";import{InputManager as i}from"./input/InputManager.js";import{Camera as a}from"./graphics/Camera.js";import{AudioManager as s}from"./audio/AudioManager.js";import{AuthService as n}from"./auth/AuthService.js";import{AuthUI as r}from"./ui/AuthUI.js";import{TradingSystem as o}from"./trading/TradingSystem.js";import{TradingUI as h}from"./ui/TradingUI.js";import{SpaceNavigation as l}from"./navigation/SpaceNavigation.js";import{NetworkManager as d}from"./network/NetworkManager.js";import{playerList as c}from"./social/PlayerList.js";import{RESOURCES as p,WEAPONS as y,PLAYER as u,UI as f,GRAPHICS as g}from"./constants.js";class MaxPixelsGame{constructor(){this.gameCanvas=document.getElementById("gameCanvas"),this.uiContainer=document.getElementById("ui"),this.graphics=new e(this.gameCanvas),this.particles=new t(this.graphics),this.input=new i,this.camera=new a(this.gameCanvas),this.audio=new s,this.auth=new n,this.authUI=null,this.trading=new o,this.tradingUI=new h(this.trading,this.auth),this.navigation=new l,this.network=new d,this.initializePlayerInventory(),this.initializeNetworking(),this.isInitialized=!1,this.player={x:960,y:540,velocity:{x:0,y:0},speed:200,radius:25,rotation:0,energy:y.MAX_ENERGY,lastEnergyRegenTime:Date.now(),heat:0,lastHeatDissipationTime:Date.now(),isOverheated:!1,overheatEndTime:0,health:u.MAX_HEALTH,lastHealthRegenTime:Date.now(),lastDamageTime:0,isInvincible:!1,invincibilityEndTime:0,isDead:!1,respawnTime:0,shield:u.MAX_SHIELD,lastShieldRegenTime:Date.now(),lastShieldBreakTime:0,shieldsActive:!1,lastShieldRechargeSound:0},this.asteroids=[],this.stations=[],this.nearbyStation=null,this.nearbyJumpGate=null,this.interactionRange=80,this.otherPlayers=new Map,this.highlightedStation=null,this.highlightedJumpGate=null,this.activeThrusterSound=null,this.ambientSound=null,this.lastFireTime=0,this.lastEnergyRechargeSound=0,this.weaponChargeIndicator=null,this.weaponHeatIndicator=null,this.lastServerUpdate=null,this.isPaused=!1,this.pauseMenuElement=null,console.log("Max-Pixels initializing..."),this.init()}async init(){try{await this.initializeGraphics(),await this.initializeUI(),this.initializeAudio(),this.startGameLoop(),this.isInitialized=!0,console.log("Max-Pixels initialized successfully"),await this.connectToMultiplayer(),this.hideLoadingScreen()}catch(e){console.error("Failed to initialize Max-Pixels:",e)}}async initializeGraphics(){console.log("Initializing graphics system...");this.graphics.createLayer("background",1),this.graphics.createLayer("game",5);this.loadCurrentSector();const e=this.graphics.createSpaceship(this.player.x,this.player.y,25,{id:"playerShip"});this.graphics.addToLayer("game",e),this.playerShip=e;const t=this.player.energy/y.MAX_ENERGY;this.weaponChargeIndicator=this.graphics.createWeaponChargeIndicator(this.player.x,this.player.y,t,{id:"weaponChargeIndicator"}),this.graphics.addToLayer("game",this.weaponChargeIndicator);const i=this.player.heat/y.MAX_HEAT;this.weaponHeatIndicator=this.graphics.createWeaponHeatIndicator(this.player.x,this.player.y+y.HEAT_INDICATOR_OFFSET,i,{id:"weaponHeatIndicator"}),this.graphics.addToLayer("game",this.weaponHeatIndicator),this.shieldEffect=this.graphics.createShieldEffect(this.player.x,this.player.y,this.player.radius+10,{id:"playerShield"}),this.shieldEffect.style.display="none",this.graphics.addToLayer("game",this.shieldEffect),this.camera.centerOn(this.player.x,this.player.y)}async initializeUI(){console.log("Initializing UI system..."),this.createHUD(),this.authUI=new r(this.auth,this.uiContainer)}initializeAudio(){console.log("Initializing audio system..."),this.ambientSound=this.audio.playAmbient(),document.addEventListener("click",()=>{this.audio.resumeAudioContext()},{once:!0})}startGameLoop(){console.log("Starting game loop...");const gameLoop=e=>{this.update(e),this.render(e),requestAnimationFrame(gameLoop)};requestAnimationFrame(gameLoop)}loadCurrentSector(){const e=this.navigation.getCurrentSector();if(!e)return;console.log(`Loading sector: ${e.name}`),this.clearSector();const t=this.graphics.getLayer("background");if(t&&(t.style.backgroundColor=e.backgroundColor),e.nebulaTypes&&e.nebulaTypes.length>0){const t=this.graphics.createNebulaBackground(e.bounds.width,e.bounds.height,e.nebulaTypes);this.graphics.addToLayer("background",t)}const i=this.graphics.createStarField(200);if(this.graphics.addToLayer("background",i),e.dustDensity&&e.dustDensity>0){const t=this.graphics.createCosmicDustField(e.bounds.width,e.bounds.height,{density:e.dustDensity,particleCount:120});this.graphics.addToLayer("background",t)}if(e.debrisDensity&&e.debrisDensity>0){const t=this.graphics.createSpaceDebrisField(e.bounds.width,e.bounds.height,{density:e.debrisDensity,debrisCount:10+Math.floor(e.bounds.width*e.bounds.height/2e5)});this.graphics.addToLayer("background",t)}this.createAsteroids(e.asteroids,e.bounds),e.planets.forEach(e=>{const t=this.graphics.createPlanet(e.x,e.y,e.radius,{surfaceColor:e.surfaceColor,coreColor:e.coreColor,atmosphereColor:e.atmosphereColor});this.graphics.addToLayer("game",t)}),this.stations=[],e.stations.forEach(e=>{const t=this.graphics.createSpaceStation(e.x,e.y,e.radius,{id:e.id});this.graphics.addToLayer("game",t),this.stations.push(e)}),e.jumpGates.forEach(e=>{const t=this.graphics.createJumpGate(e.x,e.y,e.radius,{id:e.id});this.graphics.addToLayer("game",t)})}clearSector(){this.highlightedStation=null,this.highlightedJumpGate=null,this.nearbyStation=null,this.nearbyJumpGate=null,this.asteroids=[],this.stations=[];const e=this.graphics.getLayer("background"),t=this.graphics.getLayer("game");if(e&&(e.innerHTML=""),t){const e=t.querySelector("#playerShip"),i=Array.from(t.querySelectorAll('[id^="otherPlayer_"]'));t.innerHTML="",e&&t.appendChild(e),i.forEach(e=>t.appendChild(e))}}createAsteroids(e,t){for(let i=0;i<e;i++){const e=Math.random()*t.width,i=Math.random()*t.height,a=30*Math.random()+10,s=`asteroid_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,n={id:s,x:e,y:i,size:a};this.asteroids.push(n);const r=this.graphics.createAsteroid(e,i,a,{id:s});this.graphics.addToLayer("background",r)}}checkCollisions(){for(let e=0;e<this.asteroids.length;e++){const t=this.asteroids[e];if(Math.sqrt(Math.pow(this.player.x-t.x,2)+Math.pow(this.player.y-t.y,2))<this.player.radius+t.size){this.handleCollision(t);break}}}handleCollision(e){this.takeDamage(u.ASTEROID_COLLISION_DAMAGE,"asteroid")&&(this.particles.createExplosionEffect(e.x,e.y,{particleCount:30,colors:["#ff4444","#ff8800","#ffff00","#ffffff","#ffaa44"],velocity:{min:60,max:120}}),this.particles.createSparksEffect(this.player.x,this.player.y),console.log("Collision with asteroid detected!"))}checkStationProximity(){let e=null,t=1/0;for(let i of this.stations){const a=Math.sqrt(Math.pow(this.player.x-i.x,2)+Math.pow(this.player.y-i.y,2));a<this.interactionRange&&a<t&&(t=a,e=i)}if(e!==this.highlightedStation){if(this.highlightedStation){const e=this.graphics.svg.querySelector(`#${this.highlightedStation.id}`);e&&this.graphics.removeProximityGlow(e)}if(e){const t=this.graphics.svg.querySelector(`#${e.id}`);t&&this.graphics.addProximityGlow(t,f.PROXIMITY_GLOW_COLOR)}this.highlightedStation=e}e!==this.nearbyStation&&(this.nearbyStation=e,this.updateInteractionPrompt())}interactWithStation(e){console.log(`Interacting with ${e.name}!`),"trading"===e.type&&this.openTradingInterface(e)}openTradingInterface(e){console.log(`Opening trading interface for ${e.name}`),this.tradingUI.openTradingInterface(e)}checkJumpGateProximity(){const e=this.navigation.checkJumpGateProximity(this.player.x,this.player.y,this.interactionRange);if(e!==this.highlightedJumpGate){if(this.highlightedJumpGate){const e=this.graphics.svg.querySelector(`#${this.highlightedJumpGate.id}`);e&&this.graphics.removeProximityGlow(e)}if(e){const t=this.graphics.svg.querySelector(`#${e.id}`);t&&this.graphics.addProximityGlow(t,f.PROXIMITY_GLOW_COLOR)}this.highlightedJumpGate=e}e!==this.nearbyJumpGate&&(this.nearbyJumpGate=e,this.updateInteractionPrompt())}async jumpThroughGate(e){if(!this.navigation.canJump())return void console.log("Jump on cooldown");console.log(`Jumping through ${e.name} to ${e.destination}`);await this.navigation.jumpToSector(e.destination,(e,t)=>{console.log(`Starting jump from ${e} to ${t}`),this.showJumpAnimation()},(e,t)=>{console.log(`Jump complete to ${e}`),this.onSectorChanged(e,t)})||console.error("Jump failed")}showJumpAnimation(){const e=document.createElement("div");e.style.cssText="\n            position: fixed;\n            top: 0; left: 0;\n            width: 100%; height: 100%;\n            background: white;\n            opacity: 0.8;\n            z-index: 1000;\n            pointer-events: none;\n        ",document.body.appendChild(e),setTimeout(()=>{e.style.transition="opacity 0.5s",e.style.opacity="0",setTimeout(()=>{document.body.removeChild(e)},500)},100)}onSectorChanged(e,t){const i=this.navigation.getPlayerSpawnPosition(e);this.player.x=i.x,this.player.y=i.y,this.player.velocity.x=0,this.player.velocity.y=0,this.updatePlayerBounds(),this.loadCurrentSector(),this.graphics.addToLayer("game",this.playerShip),this.playerShip.setAttribute("transform",`translate(${this.player.x}, ${this.player.y}) rotate(${this.player.rotation})`),this.camera.centerOn(this.player.x,this.player.y),console.log(`Now in ${t.name}`)}updateInteractionPrompt(){const e=document.getElementById("interaction-prompt"),t=document.getElementById("station-name"),i=document.getElementById("interaction-text");this.nearbyStation?(e.style.display="block",t.textContent=this.nearbyStation.name,i.textContent="Press F to Dock"):this.nearbyJumpGate?(e.style.display="block",t.textContent=this.nearbyJumpGate.name,i.textContent="Press F to Jump"):e.style.display="none"}update(e){this.handleInput(),this.isPaused||(this.updatePlayer(),this.updateEnergy(),this.updateHeat(),this.updateHealth(),this.updateShield(),this.updateThrusterEffects(),this.updateCamera(),this.checkCollisions(),this.checkStationProximity(),this.checkJumpGateProximity(),this.input.update())}handleInput(){if(this.input.justPressed("menu"))return void this.togglePause();if(this.input.justPressed("player_list"))return void c.toggle();if(this.isPaused)return;const e=this.input.getMovementVector();this.player.velocity.x=e.x,this.player.velocity.y=e.y,this.input.isPressed("boost")&&(this.player.velocity.x*=2,this.player.velocity.y*=2),this.input.justPressed("KeyQ")&&this.camera.zoomOut(),this.input.justPressed("KeyE")&&this.camera.zoomIn(),this.input.justPressed("KeyF")&&(this.nearbyStation?this.interactWithStation(this.nearbyStation):this.nearbyJumpGate&&this.jumpThroughGate(this.nearbyJumpGate)),this.input.justPressed(u.SHIELD_ACTIVATION_KEY)&&this.toggleShields(),this.input.isPressed("action")&&this.fireLaser()}updatePlayer(){const e=u.DELTA_TIME;if(0!==this.player.velocity.x||0!==this.player.velocity.y){let e=180*Math.atan2(this.player.velocity.x,-this.player.velocity.y)/Math.PI-this.player.rotation;e>180&&(e-=360),e<-180&&(e+=360),this.player.rotation+=e*u.ROTATION_SMOOTHING,this.player.rotation>180&&(this.player.rotation-=360),this.player.rotation<-180&&(this.player.rotation+=360)}this.player.x+=this.player.velocity.x*this.player.speed*e,this.player.y+=this.player.velocity.y*this.player.speed*e;const t=this.navigation.getSectorBounds();this.player.x=Math.max(25,Math.min(t.width-25,this.player.x)),this.player.y=Math.max(25,Math.min(t.height-25,this.player.y)),this.playerShip.setAttribute("transform",`translate(${this.player.x}, ${this.player.y}) rotate(${this.player.rotation})`),this.weaponChargeIndicator&&this.weaponChargeIndicator.setAttribute("transform",`translate(${this.player.x}, ${this.player.y})`),this.weaponHeatIndicator&&this.weaponHeatIndicator.setAttribute("transform",`translate(${this.player.x}, ${this.player.y+y.HEAT_INDICATOR_OFFSET})`),this.shieldEffect&&this.shieldEffect.setAttribute("transform",`translate(${this.player.x}, ${this.player.y})`),this.sendPlayerUpdate()}updatePlayerBounds(){const e=this.navigation.getSectorBounds();this.player.x=Math.max(25,Math.min(e.width-25,this.player.x)),this.player.y=Math.max(25,Math.min(e.height-25,this.player.y))}updateEnergy(){const e=Date.now(),t=(e-this.player.lastEnergyRegenTime)/1e3,i=this.player.energy;if(this.player.energy<y.MAX_ENERGY&&(this.player.energy=Math.min(y.MAX_ENERGY,this.player.energy+y.ENERGY_REGEN_RATE*t),i<y.ENERGY_RECHARGE_SOUND_THRESHOLD&&this.player.energy>=y.ENERGY_RECHARGE_SOUND_THRESHOLD&&e-this.lastEnergyRechargeSound>2e3&&(this.audio.playWeaponRecharge(),this.lastEnergyRechargeSound=e,this.showEnergyRechargeEffect(),console.log("Weapon energy recharged!"))),this.player.lastEnergyRegenTime=e,this.weaponChargeIndicator){const e=this.player.energy/y.MAX_ENERGY;this.graphics.updateWeaponChargeIndicator(this.weaponChargeIndicator,e)}}updateHeat(){const e=Date.now(),t=(e-this.player.lastHeatDissipationTime)/1e3;if(this.player.isOverheated&&e>this.player.overheatEndTime&&(this.player.isOverheated=!1,console.log("Weapon cooling system restored")),this.player.heat>0&&(this.player.heat=Math.max(0,this.player.heat-y.HEAT_DISSIPATION_RATE*t)),this.player.lastHeatDissipationTime=e,this.weaponHeatIndicator){const e=this.player.heat/y.MAX_HEAT;this.graphics.updateWeaponHeatIndicator(this.weaponHeatIndicator,e)}}updateHealth(){const e=Date.now();if(this.player.isInvincible&&e>this.player.invincibilityEndTime&&(this.player.isInvincible=!1,this.removeInvincibilityEffect()),this.player.isDead&&e>this.player.respawnTime)return void this.respawnPlayer();if(this.player.isDead||e-this.player.lastDamageTime<u.HEALTH_REGEN_DELAY)return;const t=(e-this.player.lastHealthRegenTime)/1e3,i=this.player.health;this.player.health<u.MAX_HEALTH&&(this.player.health=Math.min(u.MAX_HEALTH,this.player.health+u.HEALTH_REGEN_RATE*t),i<u.MAX_HEALTH&&this.player.health>=u.MAX_HEALTH&&(this.showHealthRegenEffect(),console.log("Health fully restored!"))),this.player.lastHealthRegenTime=e}updateShield(){const e=Date.now();if(e-this.player.lastShieldBreakTime<u.SHIELD_REGEN_DELAY)return;const t=(e-this.player.lastShieldRegenTime)/1e3,i=this.player.shield;this.player.shield<u.MAX_SHIELD&&(this.player.shield=Math.min(u.MAX_SHIELD,this.player.shield+u.SHIELD_REGEN_RATE*t),i<u.SHIELD_RECHARGE_COMPLETE_THRESHOLD&&this.player.shield>=u.SHIELD_RECHARGE_COMPLETE_THRESHOLD&&e-this.player.lastShieldRechargeSound>2e3&&(this.audio.playWeaponRecharge(),this.player.lastShieldRechargeSound=e,this.showShieldRechargeEffect(),console.log("Shields recharged!"))),this.player.lastShieldRegenTime=e,this.player.shield<=0&&this.player.shieldsActive&&(this.player.shieldsActive=!1,this.hideShields())}toggleShields(){this.player.shield<=0?console.log("Cannot activate shields - no shield energy!"):(this.player.shieldsActive=!this.player.shieldsActive,this.player.shieldsActive?(this.showShields(),console.log("Shields activated")):(this.hideShields(),console.log("Shields deactivated")))}showShields(){this.shieldEffect&&(this.shieldEffect.style.display="block")}hideShields(){this.shieldEffect&&(this.shieldEffect.style.display="none")}showShieldRechargeEffect(){this.particles.createEnergyRechargeEffect(this.player.x,this.player.y,{colors:["#00aaff","#44ccff","#88eeff","#aaccff","#ffffff"],particleCount:15,particleLife:1500,velocity:{min:25,max:50},size:{min:2,max:6}})}takeDamage(e,t="unknown"){if(this.player.isInvincible||this.player.isDead)return!1;let i=e,a=0;if(u.SHIELD_AUTO_ACTIVATE&&this.player.shield>0&&!this.player.shieldsActive&&(this.player.shieldsActive=!0,this.showShields(),console.log("Shields auto-activated!")),this.player.shieldsActive&&this.player.shield>0){const t=e*u.SHIELD_DAMAGE_REDUCTION;a=Math.min(t,this.player.shield),i=e-a,this.player.shield=Math.max(0,this.player.shield-a),this.player.shield<=0&&(this.player.shieldsActive=!1,this.player.lastShieldBreakTime=Date.now(),this.hideShields(),this.showShieldBreakEffect(),console.log("Shields broken!"))}return this.player.health-=i,this.player.lastDamageTime=Date.now(),a>0&&i>0?(this.showShieldDamageEffect(),this.showDamageEffect(),this.camera.shake(15,400)):a>0?(this.showShieldDamageEffect(),this.camera.shake(10,300)):(this.showDamageEffect(),this.camera.shake(20,600)),this.audio.playCollision(.9),console.log(`Player took ${Math.round(e)} damage from ${t}. Shield: ${Math.round(this.player.shield)}/${u.MAX_SHIELD}, Health: ${Math.round(this.player.health)}/${u.MAX_HEALTH}`),this.player.health<=0?(this.playerDeath(),!0):(this.player.isInvincible=!0,this.player.invincibilityEndTime=Date.now()+u.INVINCIBILITY_DURATION,this.showInvincibilityEffect(),!0)}showShieldDamageEffect(){if(this.shieldEffect&&this.player.shieldsActive){const e=this.shieldEffect.style.opacity||"1";this.shieldEffect.style.opacity="0.3",setTimeout(()=>{this.shieldEffect.style.opacity=e},150)}}showShieldBreakEffect(){this.particles.createExplosionEffect(this.player.x,this.player.y,{particleCount:20,colors:["#00aaff","#44ccff","#88eeff","#ffffff"],velocity:{min:60,max:120}})}playerDeath(){this.player.health=0,this.player.isDead=!0,this.player.respawnTime=Date.now()+u.DEATH_RESPAWN_DELAY,this.player.velocity.x=0,this.player.velocity.y=0,console.log("Player died! Respawning in",u.DEATH_RESPAWN_DELAY/1e3,"seconds..."),this.particles.createExplosionEffect(this.player.x,this.player.y,{particleCount:50,colors:["#ff0000","#ff4444","#ffaa00","#ffffff","#ff8800"],velocity:{min:100,max:200}}),this.playerShip.style.opacity="0",this.showDeathScreen()}respawnPlayer(){this.player.health=u.MAX_HEALTH,this.player.energy=y.MAX_ENERGY,this.player.heat=0,this.player.isOverheated=!1,this.player.isDead=!1,this.player.shield=u.MAX_SHIELD,this.player.shieldsActive=!1,this.player.x=u.SPAWN_X,this.player.y=u.SPAWN_Y,this.player.velocity.x=0,this.player.velocity.y=0,this.player.rotation=0,this.player.isInvincible=!0,this.player.invincibilityEndTime=Date.now()+u.INVINCIBILITY_DURATION,this.playerShip.setAttribute("transform",`translate(${this.player.x}, ${this.player.y}) rotate(${this.player.rotation})`),this.playerShip.style.opacity="1",this.camera.centerOn(this.player.x,this.player.y),this.showRespawnEffect(),this.showInvincibilityEffect(),this.hideDeathScreen(),console.log("Player respawned!")}showDamageEffect(){const e=this.playerShip.querySelector("path");if(e){const t=e.getAttribute("fill")||"#4a90e2";e.setAttribute("fill","#ff4444"),setTimeout(()=>{e.setAttribute("fill",t)},200)}}showInvincibilityEffect(){let e=setInterval(()=>{if(!this.player.isInvincible)return clearInterval(e),void(this.playerShip.style.opacity="1");this.playerShip.style.opacity="0.4"===this.playerShip.style.opacity?"1":"0.4"},200)}removeInvincibilityEffect(){this.playerShip.style.opacity="1"}showHealthRegenEffect(){this.particles.createSparksEffect(this.player.x,this.player.y,{colors:["#00ff00","#44ff44","#88ff88"],particleCount:8})}showRespawnEffect(){this.particles.createSparksEffect(this.player.x,this.player.y,{colors:["#00ffff","#44ffff","#88ffff","#ffffff"],particleCount:20})}showDeathScreen(){let e=document.getElementById("death-screen");if(!e){e=document.createElement("div"),e.id="death-screen",e.innerHTML='\n                <div class="death-content">\n                    <h2>SHIP DESTROYED</h2>\n                    <p>Respawning...</p>\n                </div>\n            ',e.style.cssText="\n                position: fixed;\n                top: 0; left: 0;\n                width: 100%; height: 100%;\n                background: rgba(255, 0, 0, 0.3);\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                z-index: 1000;\n                pointer-events: none;\n            ";const t=document.createElement("style");t.textContent="\n                .death-content {\n                    text-align: center;\n                    color: #ffffff;\n                    font-family: 'Courier New', monospace;\n                    text-shadow: 0 0 10px #ff0000;\n                }\n                .death-content h2 {\n                    font-size: 3em;\n                    margin: 0 0 20px 0;\n                    color: #ff4444;\n                }\n                .death-content p {\n                    font-size: 1.5em;\n                    margin: 0;\n                }\n            ",document.head.appendChild(t),document.body.appendChild(e)}e.style.display="flex"}hideDeathScreen(){const e=document.getElementById("death-screen");e&&(e.style.display="none")}showEnergyRechargeEffect(){const e=document.getElementById("energy-fill");if(e){const t=e.style.backgroundColor,i=e.style.boxShadow;e.style.backgroundColor="#00ffff",e.style.boxShadow="0 0 8px #00ffff",e.style.transition="all 0.1s ease-in-out",setTimeout(()=>{e.style.backgroundColor=t||"#44ff44",e.style.boxShadow=i||"",e.style.transition=""},150)}this.particles.createEnergyRechargeEffect(this.player.x,this.player.y,{colors:["#00ffff","#44ffff","#88ffff","#aaccff","#ffffff"],particleCount:12,particleLife:1200,velocity:{min:30,max:60},size:{min:2,max:5}})}updateThrusterEffects(){const e=this.input.getMovementVector(),t=this.input.isPressed("boost"),i=0!==e.x||0!==e.y;if(this.graphics.updateSpaceshipThrusters(this.playerShip,e,t),i){const i=t?1:.6;if(e.y>0){const e=this.player.x,t=this.player.y+30,a=this.player.rotation*Math.PI/180;this.particles.createThrusterTrail(e,t,a,i)}if(0!==e.x){const t=.7*i,a=this.player.rotation*Math.PI/180;if(e.x>0){const e=this.player.x-20*Math.cos(a+Math.PI/2),i=this.player.y-20*Math.sin(a+Math.PI/2);this.particles.createThrusterTrail(e,i,a-Math.PI/2,t)}if(e.x<0){const e=this.player.x+20*Math.cos(a+Math.PI/2),i=this.player.y+20*Math.sin(a+Math.PI/2);this.particles.createThrusterTrail(e,i,a+Math.PI/2,t)}}}if(i){const e=t?1:.6;this.activeThrusterSound?this.activeThrusterSound.setVolume(.6*e):this.activeThrusterSound=this.audio.playThruster(e)}else this.activeThrusterSound&&(this.activeThrusterSound.fadeOut(.3),this.activeThrusterSound=null)}updateCamera(){this.camera.follow(this.player.x,this.player.y),this.camera.update()}render(e){this.updateHUD()}createHUD(){const e=`\n            <div class="hud">\n                <div class="hud-section position">\n                    <h3>Position</h3>\n                    <div>X: <span id="player-x">0</span></div>\n                    <div>Y: <span id="player-y">0</span></div>\n                </div>\n                <div class="hud-section speed">\n                    <h3>Speed</h3>\n                    <div>Velocity: <span id="player-speed">0</span></div>\n                </div>\n                <div class="hud-section health">\n                    <h3>Health</h3>\n                    <div>HP: <span id="player-health">100</span>/100</div>\n                    <div class="health-bar">\n                        <div id="health-fill" class="health-fill"></div>\n                    </div>\n                </div>\n                <div class="hud-section energy">\n                    <h3>Energy</h3>\n                    <div>Level: <span id="player-energy">100</span>/100</div>\n                    <div class="energy-bar">\n                        <div id="energy-fill" class="energy-fill"></div>\n                    </div>\n                </div>\n                <div class="hud-section heat">\n                    <h3>Heat</h3>\n                    <div>Level: <span id="player-heat">0</span>/100</div>\n                    <div class="heat-bar">\n                        <div id="heat-fill" class="heat-fill"></div>\n                    </div>\n                </div>\n                <div class="hud-section shield">\n                    <h3>Shield</h3>\n                    <div>Level: <span id="player-shield">50</span>/50</div>\n                    <div class="shield-bar">\n                        <div id="shield-fill" class="shield-fill"></div>\n                    </div>\n                </div>\n                <div class="hud-section inventory">\n                    <h3>Inventory</h3>\n                    <div>Iron: <span id="inventory-iron">0</span></div>\n                    <div>Copper: <span id="inventory-copper">0</span></div>\n                </div>\n                <div class="hud-section navigation">\n                    <h3>Navigation</h3>\n                    <div>Sector: <span id="current-sector">Unknown</span></div>\n                </div>\n                <div class="hud-section controls">\n                    <h3>Controls</h3>\n                    <div>WASD / Arrow Keys: Move</div>\n                    <div>Shift: Boost</div>\n                    <div>Space: Fire Laser</div>\n                    <div>G: Toggle Shields</div>\n                    <div>Q: Zoom Out | E: Zoom In</div>\n                    <div>Tab: Player List</div>\n                </div>\n                <div class="hud-section camera">\n                    <h3>Camera</h3>\n                    <div>Zoom: <span id="camera-zoom">1.0</span>x</div>\n                </div>\n                <div class="hud-section particles">\n                    <h3>Particles</h3>\n                    <div>Active: <span id="particle-count">0</span></div>\n                </div>\n                <div class="hud-section radar">\n                    <h3>Local Radar</h3>\n                    <div class="radar-container">\n                        <svg id="radar-display" width="${g.RADAR_DEFAULT_SIZE}" height="${g.RADAR_DEFAULT_SIZE}"></svg>\n                    </div>\n                </div>\n                <div class="hud-section interaction" id="interaction-prompt" style="display: none;">\n                    <h3>Station Nearby</h3>\n                    <div id="interaction-text">Press F to Dock</div>\n                    <div id="station-name"></div>\n                </div>\n            </div>\n        `;this.uiContainer.insertAdjacentHTML("beforeend",e),this.initializeRadar()}initializeRadar(){const t=document.getElementById("radar-display");if(!t)return;this.radarEngine=new e(t);const i=g.RADAR_DEFAULT_SIZE/2,a=g.RADAR_DEFAULT_SIZE/2,s=g.RADAR_DEFAULT_SIZE/2-5;this.radar=this.radarEngine.createRadar(i,a,s,{id:"hud-radar",backgroundColor:"#001122",borderColor:"#00ff88",gridColor:"#004466",scanlineColor:"#00ff88"}),this.radarEngine.addToLayer("ui",this.radar)}updateRadar(){if(!this.radar)return;const e=this.radar.querySelector("#hud-radar_blips");if(!e)return;e.innerHTML="";const t=g.RADAR_DEFAULT_SIZE/2,i=g.RADAR_DEFAULT_SIZE/2,a=g.RADAR_DEFAULT_SIZE/2-5,s=g.RADAR_RANGE,n=this.radarEngine.createCircle(t,i,g.RADAR_PLAYER_BLIP_SIZE,{fill:"#00ff88",opacity:1,id:"player-blip"});e.appendChild(n),this.asteroids.forEach(n=>{if(Math.sqrt(Math.pow(n.x-this.player.x,2)+Math.pow(n.y-this.player.y,2))<=s){const r=(n.x-this.player.x)/s*a,o=(n.y-this.player.y)/s*a,h=t+r,l=i+o,d=this.radarEngine.createCircle(h,l,g.RADAR_ASTEROID_BLIP_SIZE,{fill:"#cc8800",opacity:.8});e.appendChild(d)}}),this.stations.forEach(n=>{if(Math.sqrt(Math.pow(n.x-this.player.x,2)+Math.pow(n.y-this.player.y,2))<=s){const r=(n.x-this.player.x)/s*a,o=(n.y-this.player.y)/s*a,h=t+r,l=i+o,d=this.radarEngine.createCircle(h,l,g.RADAR_STATION_BLIP_SIZE,{fill:"#00aaff",opacity:1});e.appendChild(d)}}),this.otherPlayers.forEach((n,r)=>{if(Math.sqrt(Math.pow(n.x-this.player.x,2)+Math.pow(n.y-this.player.y,2))<=s){const r=(n.x-this.player.x)/s*a,o=(n.y-this.player.y)/s*a,h=t+r,l=i+o,d=this.radarEngine.createCircle(h,l,g.RADAR_PLAYER_BLIP_SIZE,{fill:n.color||"#ff6b35",opacity:.9});e.appendChild(d)}})}updateHUD(){document.getElementById("player-x").textContent=Math.round(this.player.x),document.getElementById("player-y").textContent=Math.round(this.player.y);const e=Math.sqrt(this.player.velocity.x**2+this.player.velocity.y**2)*this.player.speed;document.getElementById("player-speed").textContent=Math.round(e);const t=Math.round(this.player.health),i=this.player.health/u.MAX_HEALTH*100;document.getElementById("player-health").textContent=t;const a=document.getElementById("health-fill");a&&(a.style.width=i+"%",this.player.health<=u.CRITICAL_HEALTH_THRESHOLD?(a.style.backgroundColor="#ff0000",a.style.boxShadow="0 0 8px #ff0000"):this.player.health<=u.LOW_HEALTH_THRESHOLD?(a.style.backgroundColor="#ff4444",a.style.boxShadow="0 0 4px #ff4444"):this.player.health<.5*u.MAX_HEALTH?(a.style.backgroundColor="#ffaa44",a.style.boxShadow=""):(a.style.backgroundColor="#44ff44",a.style.boxShadow=""));const s=Math.round(this.player.energy),n=this.player.energy/y.MAX_ENERGY*100;document.getElementById("player-energy").textContent=s;const r=document.getElementById("energy-fill");r&&(r.style.width=n+"%",this.player.energy<y.LOW_ENERGY_THRESHOLD?r.style.backgroundColor="#ff4444":this.player.energy<.5*y.MAX_ENERGY?r.style.backgroundColor="#ffaa44":r.style.backgroundColor="#44ff44");const o=Math.round(this.player.heat),h=this.player.heat/y.MAX_HEAT*100;document.getElementById("player-heat").textContent=o;const l=document.getElementById("heat-fill");if(l)if(l.style.width=h+"%",this.player.heat<.5*y.MAX_HEAT){const e=this.player.heat/y.MAX_HEAT*2,t=Math.floor(255*e);l.style.backgroundColor=`rgb(${t}, 255, 0)`,l.style.boxShadow=""}else if(this.player.heat<y.HEAT_WARNING_THRESHOLD){const e=2.5*(this.player.heat/y.MAX_HEAT-.5),t=Math.floor(255*(1-.5*e));l.style.backgroundColor=`rgb(255, ${t}, 0)`,l.style.boxShadow=""}else l.style.backgroundColor="#ff0000",this.player.isOverheated?l.style.boxShadow="0 0 12px #ff0000":l.style.boxShadow="0 0 6px #ff4444";const d=Math.round(this.player.shield),c=this.player.shield/u.MAX_SHIELD*100;document.getElementById("player-shield").textContent=d;const p=document.getElementById("shield-fill");p&&(p.style.width=c+"%",this.player.shield<=u.LOW_SHIELD_THRESHOLD?(p.style.backgroundColor="#ff4444",p.style.boxShadow="0 0 6px #ff4444"):this.player.shield<.5*u.MAX_SHIELD?(p.style.backgroundColor="#ffaa44",p.style.boxShadow=""):(p.style.backgroundColor="#00aaff",p.style.boxShadow=this.player.shieldsActive?"0 0 8px #00aaff":"")),document.getElementById("camera-zoom").textContent=this.camera.zoom.toFixed(1);const f=this.particles.getDebugInfo();document.getElementById("particle-count").textContent=f.activeParticles;const g=this.trading.getPlayerItemQuantity("ore-iron"),m=this.trading.getPlayerItemQuantity("ore-copper");document.getElementById("inventory-iron").textContent=g,document.getElementById("inventory-copper").textContent=m;const E=this.navigation.getCurrentSector(),v=document.getElementById("current-sector");v&&(v.textContent=E?E.name:"Unknown"),this.updateRadar()}fireLaser(){const e=Date.now();if(e-this.lastFireTime<y.LASER_FIRE_RATE)return;if(this.player.isOverheated)return void console.log("Weapon overheated! Cooling down...");if(this.player.energy<y.ENERGY_COST)return void console.log("Insufficient energy to fire laser!");this.player.energy-=y.ENERGY_COST,this.player.heat+=y.HEAT_PER_SHOT,this.player.heat>=y.OVERHEAT_THRESHOLD&&(this.player.isOverheated=!0,this.player.overheatEndTime=e+y.COOLDOWN_DURATION,console.log("Weapon overheated! Forced cooldown initiated.")),this.lastFireTime=e;const t=this.player.rotation*Math.PI/180,i=this.player.x+Math.sin(t)*this.player.radius,a=this.player.y-Math.cos(t)*this.player.radius,s=this.player.x+Math.sin(t)*y.LASER_RANGE,n=this.player.y-Math.cos(t)*y.LASER_RANGE,r=this.graphics.createLaserBeam(i,a,s,n,{color:y.LASER_COLOR,glowColor:y.LASER_GLOW_COLOR,width:y.LASER_WIDTH,duration:y.LASER_DURATION});if(this.graphics.addToLayer("game",r),this.checkLaserHits(i,a,s,n),this.audio.playLaser(.4),this.weaponChargeIndicator){const e=this.player.energy/y.MAX_ENERGY;this.graphics.updateWeaponChargeIndicator(this.weaponChargeIndicator,e)}if(this.weaponHeatIndicator){const e=this.player.heat/y.MAX_HEAT;this.graphics.updateWeaponHeatIndicator(this.weaponHeatIndicator,e)}this.sendFireAction(),console.log("Laser fired!")}checkLaserHits(e,t,i,a){for(let s=this.asteroids.length-1;s>=0;s--){const n=this.asteroids[s],r=Math.min(e,i)-n.size,o=Math.max(e,i)+n.size,h=Math.min(t,a)-n.size,l=Math.max(t,a)+n.size;if(n.x<r||n.x>o||n.y<h||n.y>l)continue;if(this.squaredDistanceFromPointToLineSegment(n.x,n.y,e,t,i,a)<n.size*n.size){const e=this.graphics.createLaserImpact(n.x,n.y,{size:y.IMPACT_SIZE,color:y.IMPACT_COLOR,ringColor:y.IMPACT_RING_COLOR,duration:y.IMPACT_DURATION});this.graphics.addToLayer("game",e);const t=this.graphics.createAsteroidDamageIndicator(n.x,n.y,n.size,{ringColor:"#ff6644",ringOpacity:.9,duration:"2.0s",ringWidth:2});this.graphics.addToLayer("game",t),this.particles.createExplosionEffect(n.x,n.y,{particleCount:y.HIT_PARTICLE_COUNT,colors:["#ff8800","#ffff00","#ff4444","#ffffff","#ffcc00","#ff6600"],velocity:{min:y.HIT_VELOCITY_MIN,max:y.HIT_VELOCITY_MAX}}),this.particles.createDebrisField(n.x,n.y,n.size),this.dropAsteroidResources(n),this.destroyAsteroid(n.id),console.log("Asteroid destroyed!");break}}}distanceFromPointToLine(e,t,i,a,s,n){const r=Math.sqrt(Math.pow(s-i,2)+Math.pow(n-a,2));if(0===r)return Math.sqrt(Math.pow(e-i,2)+Math.pow(t-a,2));const o=Math.max(0,Math.min(1,((e-i)*(s-i)+(t-a)*(n-a))/(r*r))),h=i+o*(s-i),l=a+o*(n-a);return Math.sqrt(Math.pow(e-h,2)+Math.pow(t-l,2))}squaredDistanceFromPointToLineSegment(e,t,i,a,s,n){const r=s-i,o=n-a,h=r*r+o*o;if(0===h){const s=e-i,n=t-a;return s*s+n*n}const l=Math.max(0,Math.min(1,((e-i)*r+(t-a)*o)/h)),d=e-(i+l*r),c=t-(a+l*o);return d*d+c*c}destroyAsteroid(e){const t=this.asteroids.findIndex(t=>t.id===e);-1!==t&&this.asteroids.splice(t,1);const i=this.graphics.getLayer("background");if(i){const t=i.querySelector(`#${e}`);t&&this.graphics.remove(t)}}dropAsteroidResources(e){const t=p.ASTEROID_RESOURCE_TYPES[Math.floor(Math.random()*p.ASTEROID_RESOURCE_TYPES.length)],i=Math.floor(e.size/p.RESOURCE_SIZE_DIVIDER)+p.RESOURCE_BASE_QUANTITY;this.trading.addPlayerItem(t,i),this.showResourcePickup(e.x,e.y,t,i),console.log(`Collected ${i}x ${t} from asteroid`)}showResourcePickup(e,t,i,a){const s=document.createElement("div");s.style.cssText=`\n            position: absolute;\n            left: ${e}px;\n            top: ${t}px;\n            color: #00ff00;\n            font-family: monospace;\n            font-size: 14px;\n            font-weight: bold;\n            pointer-events: none;\n            z-index: 1000;\n            text-shadow: 0 0 4px #000;\n            transform: translate(-50%, -50%);\n        `;const n="ore-iron"===i?"Iron":"Copper";s.textContent=`+${a} ${n}`,document.body.appendChild(s);let r=1,o=0;const animateResource=()=>{r-=p.PICKUP_OPACITY_DECAY,o-=p.PICKUP_FLOAT_SPEED,s.style.opacity=r,s.style.transform=`translate(-50%, -50%) translateY(${o}px)`,r>0?requestAnimationFrame(animateResource):document.body.removeChild(s)};requestAnimationFrame(animateResource)}initializePlayerInventory(){this.trading.addPlayerItem("ore-iron",10),this.trading.addPlayerItem("food-rations",5)}hideLoadingScreen(){const e=this.uiContainer.querySelector(".loading");e&&(e.style.opacity="0",setTimeout(()=>{e.style.display="none"},1e3))}initializeNetworking(){this.network.onConnection("connected",()=>{console.log("Connected to multiplayer server"),this.showNetworkStatus("Connected","success"),c.setLocalPlayer(this.network.playerId)}),this.network.onConnection("disconnected",()=>{console.log("Disconnected from multiplayer server"),this.showNetworkStatus("Disconnected","warning")}),this.network.onConnection("error",e=>{console.error("Network connection error:",e),this.showNetworkStatus("Connection Error","error")}),this.network.onConnection("reconnectFailed",()=>{console.error("Failed to reconnect to server"),this.showNetworkStatus("Offline Mode","info")}),this.network.on(this.network.MessageTypes.PLAYER_JOIN,e=>{this.handlePlayerJoin(e),c.handleNetworkMessage("player_join",e)}),this.network.on(this.network.MessageTypes.PLAYER_LEAVE,e=>{this.handlePlayerLeave(e),c.handleNetworkMessage("player_leave",e)}),this.network.on(this.network.MessageTypes.PLAYER_MOVE,e=>{this.handlePlayerMove(e),c.handleNetworkMessage("player_move",e)}),this.network.on(this.network.MessageTypes.PLAYER_FIRE,e=>{this.handlePlayerFire(e)}),this.network.on(this.network.MessageTypes.CHAT_MESSAGE,e=>{this.handleChatMessage(e)}),this.network.on(this.network.MessageTypes.GAME_STATE,e=>{this.handleGameState(e),c.handleNetworkMessage("game_state",e)})}async connectToMultiplayer(e="ws://localhost:8080"){try{const t=this.auth.getCurrentUser()?.username||null;return await this.network.connect(e,t),!0}catch(e){return console.error("Failed to connect to multiplayer server:",e),this.showNetworkStatus("Failed to Connect","error"),!1}}disconnectFromMultiplayer(){this.network.disconnect()}sendPlayerUpdate(){this.network.isConnected&&this.network.sendPlayerMovement({x:this.player.x,y:this.player.y},this.player.velocity,this.player.rotation)}sendFireAction(){this.network.isConnected&&this.network.sendPlayerFire({x:this.player.x,y:this.player.y},this.player.rotation,"laser")}handlePlayerJoin(e){console.log(`Player ${e.playerId} joined the game`);const t=["#ff6b35","#f7931e","#ffd700","#32cd32","#00ced1","#9370db","#ff69b4"],i=t[Array.from(this.otherPlayers.keys()).length%t.length],a={id:e.playerId,x:e.position?.x||500,y:e.position?.y||500,rotation:e.rotation||0,color:i,lastUpdate:Date.now()},s=this.graphics.createOtherPlayerShip(a.x,a.y,e.playerId,i);this.graphics.addToLayer("game",s),this.otherPlayers.set(e.playerId,a),console.log(`Added visual representation for player ${e.playerId}`)}handlePlayerLeave(e){console.log(`Player ${e.playerId} left the game`);const t=this.graphics.svg.querySelector(`#otherPlayer_${e.playerId}`);t&&(this.graphics.remove(t),console.log(`Removed visual representation for player ${e.playerId}`)),this.otherPlayers.delete(e.playerId)}handlePlayerMove(e){const t=this.otherPlayers.get(e.playerId);if(!t)return;t.x=e.position.x,t.y=e.position.y,t.rotation=e.rotation||t.rotation,t.lastUpdate=Date.now();const i=this.graphics.svg.querySelector(`#otherPlayer_${e.playerId}`);i&&i.setAttribute("transform",`translate(${t.x}, ${t.y}) rotate(${t.rotation})`),console.log(`Updated player ${e.playerId} position to (${t.x}, ${t.y})`)}handlePlayerFire(e){const t=this.otherPlayers.get(e.playerId);if(!t)return;console.log(`Player ${e.playerId} fired weapon`);const i=t.rotation*Math.PI/180,a=t.x+20*Math.sin(i),s=t.y-20*Math.cos(i),n=t.x+400*Math.sin(i),r=t.y-400*Math.cos(i),o=this.graphics.createLaserBeam(a,s,n,r,{color:"#00ff88",glowColor:"#88ffaa",width:3,duration:300});this.graphics.addToLayer("game",o),this.audio.playLaser(.2)}handleChatMessage(e){console.log(`Chat from ${e.playerId}: ${e.message}`),this.displayChatMessage(e.playerId,e.message)}displayChatMessage(e,t){let i=document.getElementById("chat-container");i||(i=this.createChatContainer());const a=document.createElement("div");a.className="chat-message",a.innerHTML=`<span class="chat-player">${e}:</span> <span class="chat-text">${t}</span>`,i.appendChild(a),i.scrollTop=i.scrollHeight;const s=i.querySelectorAll(".chat-message");s.length>50&&s[0].remove(),setTimeout(()=>{a.classList.add("fade-out"),setTimeout(()=>{a.parentNode&&a.remove()},1e3)},1e4)}createChatContainer(){const e=document.createElement("div");e.id="chat-container",e.className="chat-container";const t=document.createElement("style");return t.textContent="\n            .chat-container {\n                position: absolute;\n                bottom: 20px;\n                left: 20px;\n                width: 350px;\n                height: 200px;\n                background: rgba(0, 50, 100, 0.9);\n                border: 1px solid #4488ff;\n                border-radius: 8px;\n                padding: 10px;\n                overflow-y: auto;\n                backdrop-filter: blur(5px);\n                z-index: 100;\n                font-family: 'Courier New', monospace;\n                font-size: 13px;\n            }\n            \n            .chat-message {\n                margin-bottom: 8px;\n                padding: 4px 8px;\n                background: rgba(255, 255, 255, 0.05);\n                border-radius: 4px;\n                border-left: 3px solid #4488ff;\n                opacity: 1;\n                transition: opacity 1s ease-out;\n            }\n            \n            .chat-message.fade-out {\n                opacity: 0;\n            }\n            \n            .chat-player {\n                color: #88ccff;\n                font-weight: bold;\n            }\n            \n            .chat-text {\n                color: #ffffff;\n                word-wrap: break-word;\n            }\n            \n            .chat-container::-webkit-scrollbar {\n                width: 6px;\n            }\n            \n            .chat-container::-webkit-scrollbar-track {\n                background: rgba(255, 255, 255, 0.1);\n                border-radius: 3px;\n            }\n            \n            .chat-container::-webkit-scrollbar-thumb {\n                background: #4488ff;\n                border-radius: 3px;\n            }\n            \n            .chat-container::-webkit-scrollbar-thumb:hover {\n                background: #88ccff;\n            }\n        ",document.head.appendChild(t),document.getElementById("ui").appendChild(e),e}handleGameState(e){e&&"object"==typeof e?(console.log("Received game state update:",e),e.players&&"object"==typeof e.players&&this.updateOtherPlayersFromState(e.players),e.gameObjects&&Array.isArray(e.gameObjects)&&this.updateGameObjectsFromState(e.gameObjects),e.lastUpdate&&(this.lastServerUpdate=e.lastUpdate,console.log(`Game state synced with server (timestamp: ${e.lastUpdate})`))):console.warn("Invalid game state data received:",e)}updateOtherPlayersFromState(e){let t;if(e instanceof Map)t=e;else{if("object"!=typeof e)return void console.warn("Invalid players data format:",e);t=new Map(Object.entries(e))}for(const[e,i]of this.otherPlayers.entries())t.has(e)||this.handlePlayerLeave({playerId:e});for(const[e,i]of t.entries()){if(e===this.network.playerId)continue;this.otherPlayers.get(e)?this.handlePlayerMove({playerId:e,position:i.position||{x:i.x,y:i.y},rotation:i.rotation||0}):this.handlePlayerJoin({playerId:e,position:i.position||{x:i.x,y:i.y},rotation:i.rotation||0})}}updateGameObjectsFromState(e){if(console.log(`Received ${e.length} game objects from server:`,e),!Array.isArray(e))return void console.warn("Invalid gameObjects data received");const t=e.filter(e=>"asteroid"===e.type),i=e.filter(e=>"station"===e.type);this.synchronizeAsteroids(t),this.synchronizeStations(i)}synchronizeAsteroids(e){const t=this.graphics.getLayer("background");if(!t)return;const i=new Set(e.map(e=>e.id));this.asteroids=this.asteroids.filter(e=>{if(!i.has(e.id)){const i=t.querySelector(`#${e.id}`);return i&&t.removeChild(i),console.log(`Removed asteroid ${e.id} (deleted on server)`),!1}return!0}),e.forEach(e=>{const i=this.asteroids.findIndex(t=>t.id===e.id);if(i>=0){const a=this.asteroids[i];if(a.x!==e.x||a.y!==e.y||a.size!==e.size){this.asteroids[i]={...e};const a=t.querySelector(`#${e.id}`);a&&a.setAttribute("transform",`translate(${e.x}, ${e.y})`)}}else{this.asteroids.push({...e});const t=this.graphics.createAsteroid(e.x,e.y,e.size,{id:e.id});this.graphics.addToLayer("background",t),console.log(`Added new asteroid ${e.id} from server`)}})}synchronizeStations(e){const t=this.graphics.getLayer("game");if(!t)return;const i=new Set(e.map(e=>e.id));this.stations=this.stations.filter(e=>{if(!i.has(e.id)){const i=t.querySelector(`#${e.id}`);return i&&t.removeChild(i),console.log(`Removed station ${e.id} (deleted on server)`),!1}return!0}),e.forEach(e=>{const i=this.stations.findIndex(t=>t.id===e.id);if(i>=0){const a=this.stations[i];if(a.x!==e.x||a.y!==e.y){this.stations[i]={...e};const a=t.querySelector(`#${e.id}`);a&&a.setAttribute("transform",`translate(${e.x}, ${e.y})`)}}else{this.stations.push({...e});const t=this.graphics.createSpaceStation(e.x,e.y,e.radius||40,{id:e.id});this.graphics.addToLayer("game",t),console.log(`Added new station ${e.id} from server`)}})}showNetworkStatus(e,t="info"){let i=document.getElementById("network-status");i||(i=document.createElement("div"),i.id="network-status",i.style.cssText="\n                position: fixed;\n                top: 10px;\n                right: 10px;\n                padding: 8px 12px;\n                border-radius: 4px;\n                font-size: 12px;\n                font-family: monospace;\n                z-index: 1000;\n                transition: opacity 0.3s ease;\n            ",document.body.appendChild(i));const a={success:{bg:"#4CAF50",text:"#ffffff"},warning:{bg:"#FF9800",text:"#ffffff"},error:{bg:"#F44336",text:"#ffffff"},info:{bg:"#2196F3",text:"#ffffff"}},s=a[t]||a.info;i.style.backgroundColor=s.bg,i.style.color=s.text,i.textContent=e,i.style.opacity="1","success"===t&&setTimeout(()=>{i.style.opacity="0.7"},3e3)}togglePause(){this.isPaused=!this.isPaused,this.isPaused?(this.showPauseMenu(),console.log("Game paused")):(this.hidePauseMenu(),console.log("Game resumed"))}showPauseMenu(){if(this.pauseMenuElement)return void(this.pauseMenuElement.style.display="flex");this.pauseMenuElement=document.createElement("div"),this.pauseMenuElement.id="pause-menu",this.pauseMenuElement.innerHTML=`\n            <div class="pause-menu-content">\n                <h2>GAME PAUSED</h2>\n                <div class="pause-menu-section">\n                    <h3>Controls</h3>\n                    <div class="controls-list">\n                        <div><span class="key">WASD / Arrow Keys</span> Move</div>\n                        <div><span class="key">Shift</span> Boost</div>\n                        <div><span class="key">Space</span> Fire Laser</div>\n                        <div><span class="key">F</span> Interact / Dock / Jump</div>\n                        <div><span class="key">Q / E</span> Zoom Out / In</div>\n                        <div><span class="key">Escape</span> Pause Menu</div>\n                    </div>\n                </div>\n                <div class="pause-menu-section">\n                    <h3>Options</h3>\n                    <div class="options-list">\n                        <button id="toggle-audio" class="menu-button">\n                            Audio: ${this.audio&&this.audio.enabled?"ON":"OFF"}\n                        </button>\n                        <button id="resume-game" class="menu-button primary">Resume Game</button>\n                    </div>\n                </div>\n                <div class="pause-menu-section">\n                    <h3>Status</h3>\n                    <div class="status-info">\n                        <div>Health: <span class="status-value">${Math.round(this.player.health)}/${u.MAX_HEALTH}</span></div>\n                        <div>Energy: <span class="status-value">${Math.round(this.player.energy)}/${y.MAX_ENERGY}</span></div>\n                        <div>Heat: <span class="status-value">${Math.round(this.player.heat)}/${y.MAX_HEAT}${this.player.isOverheated?" (OVERHEAT)":""}</span></div>\n                        <div>Sector: <span class="status-value">${this.navigation.getCurrentSector()?.name||"Unknown"}</span></div>\n                        <div>Network: <span class="status-value">${this.network.isConnected?"Connected":"Offline"}</span></div>\n                    </div>\n                </div>\n                <div class="pause-footer">\n                    <p>Press <span class="key">Escape</span> to resume</p>\n                </div>\n            </div>\n        `,this.pauseMenuElement.style.cssText="\n            position: fixed;\n            top: 0; left: 0;\n            width: 100%; height: 100%;\n            background: rgba(0, 20, 40, 0.95);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            z-index: 2000;\n            font-family: 'Courier New', monospace;\n            backdrop-filter: blur(10px);\n        ";const e=document.createElement("style");e.textContent="\n            .pause-menu-content {\n                background: rgba(0, 50, 100, 0.9);\n                border: 2px solid #4488ff;\n                border-radius: 12px;\n                padding: 30px;\n                max-width: 500px;\n                width: 90%;\n                max-height: 80%;\n                overflow-y: auto;\n                text-align: center;\n                box-shadow: 0 0 30px rgba(68, 136, 255, 0.3);\n            }\n            \n            .pause-menu-content h2 {\n                color: #ffffff;\n                font-size: 2.5em;\n                margin: 0 0 30px 0;\n                text-shadow: 0 0 10px #4488ff;\n            }\n            \n            .pause-menu-section {\n                margin-bottom: 25px;\n                text-align: left;\n            }\n            \n            .pause-menu-section h3 {\n                color: #88ccff;\n                font-size: 1.4em;\n                margin: 0 0 15px 0;\n                border-bottom: 1px solid #4488ff;\n                padding-bottom: 5px;\n            }\n            \n            .controls-list > div, .status-info > div {\n                color: #ffffff;\n                margin: 8px 0;\n                padding: 5px 0;\n                font-size: 1.1em;\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n            }\n            \n            .key {\n                background: #4488ff;\n                color: #ffffff;\n                padding: 3px 8px;\n                border-radius: 4px;\n                font-weight: bold;\n                min-width: 120px;\n                text-align: center;\n                display: inline-block;\n                margin-right: 10px;\n            }\n            \n            .status-value {\n                color: #88ccff;\n                font-weight: bold;\n            }\n            \n            .menu-button {\n                background: rgba(68, 136, 255, 0.3);\n                border: 1px solid #4488ff;\n                color: #ffffff;\n                padding: 10px 20px;\n                margin: 5px;\n                border-radius: 6px;\n                font-family: 'Courier New', monospace;\n                font-size: 1em;\n                cursor: pointer;\n                transition: all 0.2s ease;\n                min-width: 150px;\n            }\n            \n            .menu-button:hover {\n                background: rgba(68, 136, 255, 0.5);\n                box-shadow: 0 0 8px rgba(68, 136, 255, 0.4);\n            }\n            \n            .menu-button.primary {\n                background: #4488ff;\n            }\n            \n            .menu-button.primary:hover {\n                background: #88ccff;\n                color: #002244;\n            }\n            \n            .options-list {\n                text-align: center;\n            }\n            \n            .pause-footer {\n                margin-top: 20px;\n                padding-top: 15px;\n                border-top: 1px solid #4488ff;\n                color: #88ccff;\n                font-size: 0.9em;\n            }\n        ",document.querySelector("#pause-menu-styles")||(e.id="pause-menu-styles",document.head.appendChild(e)),document.body.appendChild(this.pauseMenuElement);const t=this.pauseMenuElement.querySelector("#resume-game"),i=this.pauseMenuElement.querySelector("#toggle-audio");t.addEventListener("click",()=>{this.togglePause()}),i.addEventListener("click",()=>{this.audio.enabled?(this.audio.disable(),i.textContent="Audio: OFF"):(this.audio.enable(),i.textContent="Audio: ON")})}hidePauseMenu(){this.pauseMenuElement&&(this.pauseMenuElement.style.display="none")}}document.addEventListener("DOMContentLoaded",()=>{window.maxPixelsGame=new MaxPixelsGame});