import{TRADING as e}from"../constants.js";export class AuthUI{constructor(e,t){this.auth=e,this.container=t,this.currentModal=null,this.init()}init(){this.createAuthButton(),this.auth.isAuthenticated()&&this.showUserProfile()}createAuthButton(){const e=document.createElement("div");e.className="auth-section",e.innerHTML=`\n            <button id="authButton" class="auth-button">\n                ${this.auth.isAuthenticated()?"Profile":"Login / Register"}\n            </button>\n        `,this.container.appendChild(e),document.getElementById("authButton").addEventListener("click",()=>{this.auth.isAuthenticated()?this.showUserProfile():this.showLoginModal()})}showLoginModal(){this.createModal("login-modal",this.getLoginModalHTML()),this.setupLoginForm()}showRegisterModal(){this.createModal("register-modal",this.getRegisterModalHTML()),this.setupRegisterForm()}showUserProfile(){const e=this.auth.getCurrentUser();this.createModal("profile-modal",this.getProfileModalHTML(e)),this.setupProfileActions()}createModal(e,t){this.closeModal();const s=document.createElement("div");s.id=e,s.className="auth-modal",s.innerHTML=`\n            <div class="modal-backdrop"></div>\n            <div class="modal-content">\n                <button class="modal-close">&times;</button>\n                ${t}\n            </div>\n        `,document.body.appendChild(s),this.currentModal=s,s.querySelector(".modal-close").addEventListener("click",()=>this.closeModal()),s.querySelector(".modal-backdrop").addEventListener("click",()=>this.closeModal()),s.querySelector(".modal-content").addEventListener("click",e=>e.stopPropagation())}closeModal(){this.currentModal&&(this.currentModal.remove(),this.currentModal=null)}getLoginModalHTML(){return'\n            <h2>Login to Max-Pixels</h2>\n            <form id="loginForm" class="auth-form">\n                <div class="form-group">\n                    <label for="loginUsername">Username:</label>\n                    <input type="text" id="loginUsername" required>\n                </div>\n                <div class="form-group">\n                    <label for="loginPassword">Password:</label>\n                    <input type="password" id="loginPassword" required>\n                </div>\n                <button type="submit" class="auth-submit">Login</button>\n                <div class="auth-error" id="loginError"></div>\n            </form>\n            <div class="auth-switch">\n                <p>Don\'t have an account? <a href="#" id="switchToRegister">Register here</a></p>\n            </div>\n        '}getRegisterModalHTML(){return'\n            <h2>Join Max-Pixels</h2>\n            <form id="registerForm" class="auth-form">\n                <div class="form-group">\n                    <label for="registerUsername">Username:</label>\n                    <input type="text" id="registerUsername" required>\n                    <small>3-20 characters, letters, numbers, and underscores only</small>\n                </div>\n                <div class="form-group">\n                    <label for="registerEmail">Email:</label>\n                    <input type="email" id="registerEmail" required>\n                </div>\n                <div class="form-group">\n                    <label for="registerPassword">Password:</label>\n                    <input type="password" id="registerPassword" required>\n                    <small>At least 6 characters</small>\n                </div>\n                <button type="submit" class="auth-submit">Register</button>\n                <div class="auth-error" id="registerError"></div>\n            </form>\n            <div class="auth-switch">\n                <p>Already have an account? <a href="#" id="switchToLogin">Login here</a></p>\n            </div>\n        '}getProfileModalHTML(e){return`\n            <h2>Commander ${e.username}</h2>\n            <div class="profile-info">\n                <div class="profile-stat">\n                    <label>Level:</label>\n                    <span>${e.level}</span>\n                </div>\n                <div class="profile-stat">\n                    <label>Experience:</label>\n                    <span>${e.experience.toLocaleString()}</span>\n                </div>\n                <div class="profile-stat">\n                    <label>Credits:</label>\n                    <span>${e.credits.toLocaleString()}</span>\n                </div>\n                <div class="profile-stat">\n                    <label>Member Since:</label>\n                    <span>${new Date(e.createdAt).toLocaleDateString()}</span>\n                </div>\n            </div>\n            <div class="profile-actions">\n                <button id="logoutButton" class="auth-button logout">Logout</button>\n            </div>\n        `}setupLoginForm(){const e=document.getElementById("loginForm"),t=document.getElementById("loginError");e.addEventListener("submit",async e=>{e.preventDefault();const s=document.getElementById("loginUsername").value,n=document.getElementById("loginPassword").value,o=await this.auth.login(s,n);o.success?(this.closeModal(),this.updateAuthButton(),this.showMessage("Welcome back, "+o.user.username+"!","success")):t.textContent=o.message}),document.getElementById("switchToRegister").addEventListener("click",e=>{e.preventDefault(),this.showRegisterModal()})}setupRegisterForm(){const e=document.getElementById("registerForm"),t=document.getElementById("registerError");e.addEventListener("submit",async e=>{e.preventDefault();const s=document.getElementById("registerUsername").value,n=document.getElementById("registerEmail").value,o=document.getElementById("registerPassword").value,i=await this.auth.register(s,n,o);i.success?(this.closeModal(),this.updateAuthButton(),this.showMessage("Welcome to Max-Pixels, "+i.user.username+"!","success")):t.textContent=i.message}),document.getElementById("switchToLogin").addEventListener("click",e=>{e.preventDefault(),this.showLoginModal()})}setupProfileActions(){document.getElementById("logoutButton").addEventListener("click",()=>{this.auth.logout(),this.closeModal(),this.updateAuthButton(),this.showMessage("Logged out successfully","info")})}updateAuthButton(){const e=document.getElementById("authButton");e&&(e.textContent=this.auth.isAuthenticated()?"Profile":"Login / Register")}showMessage(t,s="info"){const n=document.createElement("div");n.className=`game-message message-${s}`,n.textContent=t,document.body.appendChild(n),setTimeout(()=>{n.classList.add("fade-out"),setTimeout(()=>n.remove(),e.FADE_OUT_DELAY)},e.MESSAGE_DURATION)}}