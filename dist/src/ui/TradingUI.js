import{TRADING as n}from"../constants.js";export class TradingUI{constructor(n,t){this.trading=n,this.auth=t,this.isOpen=!1,this.currentStation=null,this.modalElement=null}openTradingInterface(n){this.isOpen||(this.currentStation=n,this.isOpen=!0,this.createTradingModal(),this.refreshInterface())}closeTradingInterface(){this.isOpen&&(this.isOpen=!1,this.currentStation=null,this.modalElement&&(this.modalElement.remove(),this.modalElement=null))}createTradingModal(){document.body.insertAdjacentHTML("beforeend",'\n            <div class="trading-modal-overlay" id="tradingModal">\n                <div class="trading-modal">\n                    <div class="trading-header">\n                        <h2 id="stationName">Trading Station</h2>\n                        <button class="close-btn" id="closeTradingBtn">&times;</button>\n                    </div>\n                    <div class="trading-content">\n                        <div class="credits-display">\n                            <div class="player-credits">Your Credits: <span id="playerCredits">0</span></div>\n                            <div class="station-credits">Station Credits: <span id="stationCredits">0</span></div>\n                        </div>\n                        <div class="trading-panels">\n                            <div class="buy-panel">\n                                <h3>Buy from Station</h3>\n                                <div class="items-list" id="buyItemsList"></div>\n                            </div>\n                            <div class="sell-panel">\n                                <h3>Sell to Station</h3>\n                                <div class="items-list" id="sellItemsList"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        '),this.modalElement=document.getElementById("tradingModal"),document.getElementById("closeTradingBtn").addEventListener("click",()=>{this.closeTradingInterface()}),this.modalElement.addEventListener("click",n=>{n.target===this.modalElement&&this.closeTradingInterface()}),document.addEventListener("keydown",this.handleKeyPress.bind(this)),this.addTradingStyles()}handleKeyPress(n){"Escape"===n.key&&this.isOpen&&this.closeTradingInterface()}refreshInterface(){if(!this.isOpen||!this.currentStation)return;const t=this.trading.getStationInventory(this.currentStation.id),e=this.trading.getPlayerInventory(),i=this.auth.currentUser?.credits||n.DEFAULT_PLAYER_CREDITS;document.getElementById("stationName").textContent=this.currentStation.name,document.getElementById("playerCredits").textContent=i,document.getElementById("stationCredits").textContent=t?.credits||0,this.updateBuyPanel(t),this.updateSellPanel(t,e)}updateBuyPanel(n){const t=document.getElementById("buyItemsList");if(t.innerHTML="",!n)return void(t.innerHTML='<div class="no-items">Station unavailable</div>');const e=n.items.filter(n=>n.quantity>0);0!==e.length?e.forEach(n=>{const e=this.createBuyItemElement(n);t.appendChild(e)}):t.innerHTML='<div class="no-items">No items available</div>'}updateSellPanel(n,t){const e=document.getElementById("sellItemsList");e.innerHTML="",0!==t.length?t.forEach(t=>{const i=n?.items.find(n=>n.item.id===t.item.id),s=this.createSellItemElement(t,i);e.appendChild(s)}):e.innerHTML='<div class="no-items">No items to sell</div>'}createBuyItemElement(n){const t=document.createElement("div");t.className="trading-item",t.innerHTML=`\n            <div class="item-info">\n                <div class="item-name">${n.item.name}</div>\n                <div class="item-description">${n.item.description}</div>\n                <div class="item-details">\n                    <span class="price">${n.sellPrice} credits</span>\n                    <span class="stock">Stock: ${n.quantity}</span>\n                </div>\n            </div>\n            <div class="item-actions">\n                <div class="quantity-controls">\n                    <button class="qty-btn" data-action="decrease">-</button>\n                    <input type="number" class="qty-input" value="1" min="1" max="${n.quantity}">\n                    <button class="qty-btn" data-action="increase">+</button>\n                </div>\n                <button class="buy-btn" data-item-id="${n.item.id}">Buy</button>\n            </div>\n        `;const e=t.querySelector(".qty-input"),i=t.querySelector('[data-action="decrease"]'),s=t.querySelector('[data-action="increase"]'),a=t.querySelector(".buy-btn");return i.addEventListener("click",()=>{const n=parseInt(e.value);n>1&&(e.value=n-1)}),s.addEventListener("click",()=>{const n=parseInt(e.value);n<parseInt(e.max)&&(e.value=n+1)}),a.addEventListener("click",()=>{const t=parseInt(e.value);this.handleBuyItem(n.item.id,t)}),t}createSellItemElement(n,t){const e=document.createElement("div");e.className="trading-item";const i=void 0!==t,s=i?t.buyPrice:"N/A";if(e.innerHTML=`\n            <div class="item-info">\n                <div class="item-name">${n.item.name}</div>\n                <div class="item-description">${n.item.description}</div>\n                <div class="item-details">\n                    <span class="price">${s} credits ${i?"":"(Not accepted)"}</span>\n                    <span class="owned">Owned: ${n.quantity}</span>\n                </div>\n            </div>\n            <div class="item-actions">\n                ${i?`\n                <div class="quantity-controls">\n                    <button class="qty-btn" data-action="decrease">-</button>\n                    <input type="number" class="qty-input" value="1" min="1" max="${n.quantity}">\n                    <button class="qty-btn" data-action="increase">+</button>\n                </div>\n                <button class="sell-btn" data-item-id="${n.item.id}">Sell</button>\n                `:'<span class="not-accepted">Station doesn\'t buy this item</span>'}\n            </div>\n        `,i){const t=e.querySelector(".qty-input"),i=e.querySelector('[data-action="decrease"]'),s=e.querySelector('[data-action="increase"]'),a=e.querySelector(".sell-btn");i.addEventListener("click",()=>{const n=parseInt(t.value);n>1&&(t.value=n-1)}),s.addEventListener("click",()=>{const n=parseInt(t.value);n<parseInt(t.max)&&(t.value=n+1)}),a.addEventListener("click",()=>{const e=parseInt(t.value);this.handleSellItem(n.item.id,e)})}return e}handleBuyItem(t,e){const i=this.auth.currentUser?.credits||n.DEFAULT_PLAYER_CREDITS,s=this.trading.buyFromStation(this.currentStation.id,t,e,i);s.success?(this.auth.currentUser&&(this.auth.currentUser.credits=i-s.cost),this.showMessage(`Purchased ${e} units for ${s.cost} credits!`,"success"),this.refreshInterface()):this.showMessage(s.error,"error")}handleSellItem(t,e){const i=this.trading.sellToStation(this.currentStation.id,t,e);i.success?(this.auth.currentUser&&(this.auth.currentUser.credits=(this.auth.currentUser.credits||n.DEFAULT_PLAYER_CREDITS)+i.value),this.showMessage(`Sold ${e} units for ${i.value} credits!`,"success"),this.refreshInterface()):this.showMessage(i.error,"error")}showMessage(t,e){const i=document.querySelector(".trading-message");i&&i.remove();const s=document.createElement("div");s.className=`trading-message ${e}`,s.textContent=t;document.querySelector(".trading-modal").appendChild(s),setTimeout(()=>{s.remove()},n.MESSAGE_DURATION)}addTradingStyles(){if(document.getElementById("tradingStyles"))return;const n=document.createElement("style");n.id="tradingStyles",n.textContent="\n            .trading-modal-overlay {\n                position: fixed;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100%;\n                background: rgba(0, 0, 0, 0.8);\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                z-index: 1000;\n            }\n            \n            .trading-modal {\n                background: #1a1a2e;\n                border: 2px solid #4a90e2;\n                border-radius: 10px;\n                width: 90%;\n                max-width: 800px;\n                max-height: 80%;\n                position: relative;\n                color: white;\n            }\n            \n            .trading-header {\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n                padding: 15px 20px;\n                border-bottom: 1px solid #333;\n            }\n            \n            .trading-header h2 {\n                margin: 0;\n                color: #4a90e2;\n            }\n            \n            .close-btn {\n                background: none;\n                border: none;\n                color: #fff;\n                font-size: 24px;\n                cursor: pointer;\n                padding: 0;\n                width: 30px;\n                height: 30px;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n            \n            .close-btn:hover {\n                color: #4a90e2;\n            }\n            \n            .trading-content {\n                padding: 20px;\n                max-height: 60vh;\n                overflow-y: auto;\n            }\n            \n            .credits-display {\n                display: flex;\n                justify-content: space-between;\n                margin-bottom: 20px;\n                padding: 10px;\n                background: #16213e;\n                border-radius: 5px;\n            }\n            \n            .player-credits, .station-credits {\n                font-weight: bold;\n            }\n            \n            .trading-panels {\n                display: grid;\n                grid-template-columns: 1fr 1fr;\n                gap: 20px;\n            }\n            \n            .buy-panel, .sell-panel {\n                border: 1px solid #333;\n                border-radius: 5px;\n                padding: 15px;\n            }\n            \n            .buy-panel h3, .sell-panel h3 {\n                margin-top: 0;\n                color: #4a90e2;\n                border-bottom: 1px solid #333;\n                padding-bottom: 10px;\n            }\n            \n            .items-list {\n                max-height: 400px;\n                overflow-y: auto;\n            }\n            \n            .trading-item {\n                border: 1px solid #333;\n                border-radius: 5px;\n                padding: 10px;\n                margin-bottom: 10px;\n                background: #0f0f23;\n            }\n            \n            .item-info {\n                margin-bottom: 10px;\n            }\n            \n            .item-name {\n                font-weight: bold;\n                color: #4a90e2;\n                margin-bottom: 5px;\n            }\n            \n            .item-description {\n                font-size: 12px;\n                color: #aaa;\n                margin-bottom: 5px;\n            }\n            \n            .item-details {\n                display: flex;\n                justify-content: space-between;\n                font-size: 14px;\n            }\n            \n            .price {\n                color: #4a90e2;\n                font-weight: bold;\n            }\n            \n            .item-actions {\n                display: flex;\n                align-items: center;\n                gap: 10px;\n            }\n            \n            .quantity-controls {\n                display: flex;\n                align-items: center;\n                gap: 5px;\n            }\n            \n            .qty-btn {\n                background: #4a90e2;\n                border: none;\n                color: white;\n                width: 25px;\n                height: 25px;\n                border-radius: 3px;\n                cursor: pointer;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n            \n            .qty-btn:hover {\n                background: #357abd;\n            }\n            \n            .qty-input {\n                width: 50px;\n                text-align: center;\n                background: #16213e;\n                border: 1px solid #333;\n                color: white;\n                border-radius: 3px;\n                padding: 3px;\n            }\n            \n            .buy-btn, .sell-btn {\n                background: #4a90e2;\n                border: none;\n                color: white;\n                padding: 8px 15px;\n                border-radius: 5px;\n                cursor: pointer;\n                font-weight: bold;\n            }\n            \n            .buy-btn:hover, .sell-btn:hover {\n                background: #357abd;\n            }\n            \n            .sell-btn {\n                background: #e74c3c;\n            }\n            \n            .sell-btn:hover {\n                background: #c0392b;\n            }\n            \n            .no-items {\n                text-align: center;\n                padding: 20px;\n                color: #666;\n                font-style: italic;\n            }\n            \n            .not-accepted {\n                color: #666;\n                font-style: italic;\n                font-size: 12px;\n            }\n            \n            .trading-message {\n                position: absolute;\n                top: 70px;\n                left: 50%;\n                transform: translateX(-50%);\n                padding: 10px 20px;\n                border-radius: 5px;\n                font-weight: bold;\n                z-index: 1001;\n            }\n            \n            .trading-message.success {\n                background: #27ae60;\n                color: white;\n            }\n            \n            .trading-message.error {\n                background: #e74c3c;\n                color: white;\n            }\n            \n            @media (max-width: 768px) {\n                .trading-panels {\n                    grid-template-columns: 1fr;\n                }\n                \n                .trading-modal {\n                    width: 95%;\n                    max-height: 90%;\n                }\n            }\n        ",document.head.appendChild(n)}}