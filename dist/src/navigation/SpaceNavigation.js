import{NAVIGATION as t}from"../constants.js";import{gameIDGenerator as e}from"../utils/IDGenerator.js";export class SpaceNavigation{constructor(){this.currentSector="alpha-sector",this.sectors=new Map,this.jumpGates=new Map,this.isJumping=!1,this.jumpCooldown=2e3,this.lastJumpTime=0,this.initializeSectors()}initializeSectors(){this.sectors.set("alpha-sector",{id:"alpha-sector",name:"Alpha Sector",bounds:{width:1920,height:1080},description:"A peaceful trading hub with abundant resources",backgroundColor:"#000814",nebulaTypes:["blue","purple"],dustDensity:1,debrisDensity:.3,stations:[{id:"tradingStation",x:800,y:600,radius:40,type:"trading",name:"Trading Outpost Alpha"}],planets:[{x:1200,y:300,radius:60,surfaceColor:"#8b4513",coreColor:"#654321",atmosphereColor:"#4488ff"}],asteroids:15,jumpGates:[{id:"alpha-to-beta",x:1800,y:540,radius:50,destination:"beta-sector",name:"Beta Sector Gate"}]}),this.sectors.set("beta-sector",{id:"beta-sector",name:"Beta Sector",bounds:{width:2400,height:1400},description:"Rich mining sector with dangerous asteroid fields",backgroundColor:"#1a0e0e",nebulaTypes:["red","purple"],dustDensity:1.5,debrisDensity:1.2,stations:[{id:"miningStation",x:400,y:700,radius:35,type:"mining",name:"Mining Outpost Beta"}],planets:[{x:1800,y:400,radius:80,surfaceColor:"#cc4125",coreColor:"#8b1538",atmosphereColor:"#ff6b35"}],asteroids:25,jumpGates:[{id:"beta-to-alpha",x:200,y:700,radius:50,destination:"alpha-sector",name:"Alpha Sector Gate"},{id:"beta-to-gamma",x:2200,y:200,radius:50,destination:"gamma-sector",name:"Gamma Sector Gate"}]}),this.sectors.set("gamma-sector",{id:"gamma-sector",name:"Gamma Sector",bounds:{width:2800,height:1600},description:"Frontier sector with unknown dangers and opportunities",backgroundColor:"#0e1a0e",nebulaTypes:["green","blue"],dustDensity:.7,debrisDensity:.8,stations:[{id:"researchStation",x:1400,y:800,radius:45,type:"research",name:"Research Station Gamma"}],planets:[{x:600,y:300,radius:45,surfaceColor:"#2d5016",coreColor:"#1a2e0a",atmosphereColor:"#4d8c2a"},{x:2200,y:1200,radius:70,surfaceColor:"#4a4a4a",coreColor:"#2a2a2a",atmosphereColor:"#6a6a6a"}],asteroids:20,jumpGates:[{id:"gamma-to-beta",x:100,y:100,radius:50,destination:"beta-sector",name:"Beta Sector Gate"}]}),this.buildJumpGateMap(),this.assignObjectIds()}buildJumpGateMap(){this.sectors.forEach(t=>{t.jumpGates.forEach(e=>{this.jumpGates.set(e.id,{...e,currentSector:t.id})})})}assignObjectIds(){this.sectors.forEach((t,s)=>{t.stations&&t.stations.length>0&&(t.stations=e.generateStationIds(s,t.stations)),t.planets&&t.planets.length>0&&(t.planets=e.generatePlanetIds(s,t.planets)),t.jumpGates&&t.jumpGates.length>0&&(t.jumpGates=e.generateJumpGateIds(s,t.jumpGates)),t.asteroids&&"number"==typeof t.asteroids&&(t.asteroidIds=e.generateAsteroidIds(s,t.asteroids)),t.generatedAt=Date.now(),t.idVersion="v1"}),this.jumpGates.clear(),this.buildJumpGateMap()}getCurrentSector(){return this.sectors.get(this.currentSector)}getSectorData(t){return this.sectors.get(t)}getAllSectors(){return Array.from(this.sectors.values())}canJump(){const t=Date.now();return!this.isJumping&&t-this.lastJumpTime>=this.jumpCooldown}checkJumpGateProximity(e,s,a=t.PROXIMITY_CHECK_RANGE){const r=this.getCurrentSector();if(!r)return null;for(const t of r.jumpGates){if(Math.sqrt(Math.pow(e-t.x,2)+Math.pow(s-t.y,2))<a)return t}return null}async jumpToSector(e,s=null,a=null){if(!this.canJump())return console.log("Jump on cooldown or already jumping"),!1;const r=this.sectors.get(e);return r?(this.isJumping=!0,this.lastJumpTime=Date.now(),console.log(`Jumping from ${this.currentSector} to ${e}`),s&&s(this.currentSector,e),await new Promise(e=>setTimeout(e,t.JUMP_COOLDOWN)),this.currentSector=e,this.isJumping=!1,a&&a(e,r),!0):(console.error(`Sector ${e} not found`),!1)}getPlayerSpawnPosition(e){const s=this.sectors.get(e);if(!s)return{x:t.SPAWN_OFFSET,y:t.SPAWN_OFFSET};const a=s.jumpGates.find(t=>t.destination!==e);return a?{x:a.x+t.SPAWN_OFFSET,y:a.y}:{x:Math.min(t.GATE_SPAWN_X,s.bounds.width*t.GATE_SPAWN_MARGIN),y:Math.min(t.GATE_SPAWN_Y,s.bounds.height*t.GATE_SPAWN_MARGIN)}}getJumpGateInfo(t){return this.jumpGates.get(t)}isValidSector(t){return this.sectors.has(t)}getSectorBounds(t=null){const e=t?this.sectors.get(t):this.getCurrentSector();return e?e.bounds:{width:1920,height:1080}}getSectorDescription(t=null){const e=t?this.sectors.get(t):this.getCurrentSector();return e?`${e.name}: ${e.description}`:"Unknown sector"}findObjectById(t){if(!e.isValidId(t))return null;const s=e.getObjectType(t);for(const[e,a]of this.sectors){let r=null;switch(s){case"station":r=a.stations?.find(e=>e.id===t||e.uniqueId===t);break;case"planet":r=a.planets?.find(e=>e.id===t);break;case"jumpgate":r=a.jumpGates?.find(e=>e.id===t||e.uniqueId===t);break;case"asteroid":a.asteroidIds?.includes(t)&&(r={id:t,type:"asteroid",index:a.asteroidIds.indexOf(t)})}if(r)return{...r,sectorId:e,sectorName:a.name}}return null}getSectorObjects(t,e){const s=this.sectors.get(t);if(!s)return[];switch(e){case"station":return s.stations||[];case"planet":return s.planets||[];case"jumpgate":return s.jumpGates||[];case"asteroid":return s.asteroidIds?.map((t,e)=>({id:t,type:"asteroid",index:e}))||[];default:return[]}}getSectorObjectCounts(t){const e=this.sectors.get(t);return e?{stations:e.stations?.length||0,planets:e.planets?.length||0,jumpGates:e.jumpGates?.length||0,asteroids:e.asteroidIds?.length||e.asteroids||0}:{}}}